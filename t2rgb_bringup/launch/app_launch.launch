<?xml version="1.0"?>

<!--

          █████╗ ████████╗ ██████╗ ███╗   ███╗
         ██╔══██╗╚══██╔══╝██╔═══██╗████╗ ████║
         ███████║   ██║   ██║   ██║██╔████╔██║
         ██╔══██║   ██║   ██║   ██║██║╚██╔╝██║
  __     ██║  ██║   ██║   ╚██████╔╝██║ ╚═╝ ██║    _
 / _|    ╚═╝  ╚═╝   ╚═╝    ╚═════╝ ╚═╝     ╚═╝   | |
 | |_ _ __ __ _ _ __ ___   _____      _____  _ __| | __
 |  _| '__/ _` | '_ ` _ \ / _ \ \ /\ / / _ \| '__| |/ /
 | | | | | (_| | | | | | |  __/\ V  V / (_) | |  |   <
 |_| |_|  \__,_|_| |_| |_|\___| \_/\_/ \___/|_|  |_|\_\
 https://github.com/lardemua/atom
-->

<!-- WARNING WARNING WARNING WARNING auto-generated file!! -->
<!-- Only modify this file if you know what you are doing! -->

<!--
@file collect_data.launch Runs bringup collecting data from a bag file.

@arg output_folder Directory where the data will be stored.
@arg overwrite     If true, it will overwrite any existing output folder.
@arg marker_size   The size of the interaction marker that is used to trigger a data save.

@arg bag_file  Absolute path to the playing bag.
    default: $(env HOME)/ros_workspace/src/atom/bagfiles/t2rgb/diogo1.bag
@arg bag_start Playback starting time (in seconds). default: 0.0
@arg bag_rate  Playback rate. default: 1.0
-->

<launch>

    <!-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% -->
    <!-- Parameters-->
    <arg name="output_folder"/>
    <!-- folder of the output dataset -->
    <arg name="overwrite" default="false"/>
    <!-- overwrite output folder if it exists -->
    <arg name="marker_size" default="0.5"/>
    <arg name="config_file" default="$(find t2rgb_calibration)/calibration/config.yml"/>
    <arg name="rviz_file" default="$(find t2rgb_calibration)/rviz/collect_data.rviz"/>
    <arg name="description_file" default="$(find t2rgb_calibration)/urdf/initial_estimate.urdf.xacro"/>
    <!-- arguments to be passed onto playbag.launch  -->
    <arg name="bag_file" default="$(env HOME)/ros_workspace/src/atom/bagfiles/t2rgb/diogo1.bag"/>
    <arg name="bag_start" default="0"/>
    <arg name="bag_rate" default="1"/>
    <arg name="ssl" default="lambda sensor_name: False"/>


    <!-- FROM SIMAPP -->
    <arg name="motion_sequence_file" />
    <arg name="sim" default="true" /> 
    <arg name="gui" default="true" doc="Starts gazebo gui" />
    <arg name="paused" default="false" doc="Starts gazebo in paused mode" />

    <arg name="name" default="tripod_rgb_rgb" />
    <arg name="x_pos" default="0.0" />
    <arg name="y_pos" default="0.0" />
    <arg name="z_pos" default="0.0" />
    <arg name="roll" default="0" />
    <arg name="pitch" default="0" />
    <arg name="yaw" default="0.0" />
    <!-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% -->

    <!-- startup simulated world -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <!-- <arg name="world_name" default="worlds/empty.world" /> -->
        <arg name="world_name" default="$(find t2rgb_description)/worlds/t2rgb.world" />           
        <arg name="paused" value="$(arg paused)" />
        <arg name="gui" value="$(arg gui)" />
    </include>

    <param name="robot_description" command="$(find xacro)/xacro --inorder $(find t2rgb_description)/urdf/t2rgb.urdf.xacro" />


    <!-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% -->
    <!-- Call play bag launch file -->
    <include file="$(find t2rgb_calibration)/launch/playbag.launch">
        <arg name="rviz_file" value="$(arg rviz_file)"/>
        <arg name="bag_file" value="$(arg bag_file)"/>
        <arg name="bag_start" value="$(arg bag_start)"/>
        <arg name="bag_rate" value="$(arg bag_rate)"/>
    </include>
    <!-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% -->

    <!-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% -->
    <!-- Start data collector node -->
    <group if="$(arg overwrite)">
        <node name="collect_data" pkg="atom_calibration" type="collect_data"
              args="-s $(arg marker_size) -o $(arg output_folder) -c $(arg config_file) -ssl '$(arg ssl)' --overwrite" required="true"
              output="screen"/>
    </group>

    <group unless="$(arg overwrite)">
        <node name="collect_data" pkg="atom_calibration" type="collect_data"
              args="-s $(arg marker_size) -o $(arg output_folder) -c $(arg config_file) -ssl '$(arg ssl)'" required="true"
              output="screen"/>
    </group>
    <!-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% -->

    <!-- FROM SIMAPP -->
    <!-- Send robot states to tf -->
    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
        <!-- velodyne -->
        <!-- <param name="publish_frequency" type="double" value="30.0" /> -->
        <!-- velodyne -->
    </node>

    <!-- spawn the robot -->
    <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-urdf -model $(arg name) 
        -x $(arg x_pos) -y $(arg y_pos) -z $(arg z_pos)
        -R $(arg roll) -P $(arg pitch) -Y $(arg yaw)
        -param robot_description" />

    <node name="pattern_motion" pkg="t2rgb_bringup" type="pattern_motion" args="-msf $(arg motion_sequence_file)" />

</launch>